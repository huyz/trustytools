#!/bin/bash
# Use https://github.com/xbglowx/vault-kv-search to give an interactive TUI
#   to search recursively through the secrets
#
# Usage:
#   vault-kv-fzf [MOUNT_POINT]
#      MOUNT_POINT defaults to 'secret/'
#        (similar to https://docs.ansible.com/ansible/latest/collections/community/hashi_vault/vault_kv2_get_module.html#parameter-engine_mount_point)
#
# Prerequisites: vault-kv-search, fzf, jq
#
# Source: https://github.com/hashicorp/vault/issues/5275#issuecomment-1951402612
# See for potential speed-up: https://github.com/hashicorp/vault/issues/5275#issuecomment-1951402612

#### Preamble (v2024-01-14)

set -euo pipefail
shopt -s failglob
# shellcheck disable=SC2329
function trap_err { echo "ERR signal on line $(caller)" >&2; }
trap trap_err ERR
trap exit INT  # So that ^C will stop the entire script, not just the current subprocess
export PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'

SCRIPT_NAME="$(basename "${BASH_SOURCE[0]}")"

#### Checks

if ! command -v vault-kv-search &>/dev/null; then
    echo "$SCRIPT_NAME: ERROR: \`vault-kv-search\` not found." >&2
    echo "$SCRIPT_NAME: ERROR: Install from https://github.com/xbglowx/vault-kv-search" >&2
    exit 1
fi
if ! command -v fzf &>/dev/null; then
    echo "$SCRIPT_NAME: ERROR: \`fzf\` not found." >&2
    if [[ $OSTYPE == darwin* ]]; then
        echo "$SCRIPT_NAME: ERROR: try \`brew install fzf\`" >&2
    else
        echo "$SCRIPT_NAME: ERROR: try \`apt install fzf\`" >&2
    fi
    exit 1
fi
if ! command -v jq &>/dev/null; then
    echo "$SCRIPT_NAME: ERROR: \`jq\` not found." >&2
    if [[ $OSTYPE == darwin* ]]; then
        echo "$SCRIPT_NAME: ERROR: try \`brew install jq\`" >&2
    else
        echo "$SCRIPT_NAME: ERROR: try \`apt install jq\`" >&2
    fi
    exit 1
fi

#### Config

DEFAULT_MOUNT_POINT="secret/"

#### Main

if [[ -z "${VAULT_TOKEN:-}" ]]; then
    VAULT_TOKEN="$(<~/.vault-token)"
    export VAULT_TOKEN
fi

vault-kv-search --search=path "${1:-$DEFAULT_MOUNT_POINT}" -r . --json \
    | jq -r .path \
    | sort -ru \
    | fzf --preview 'vault kv get --format=yaml ${}' --preview-window down --preview-window wrap
