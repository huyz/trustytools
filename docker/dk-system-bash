#!/bin/bash
# shellcheck shell=bash
# Start a bash shell with some useful aliases (or run a (unqualified) command with arguments)
# Note: This is specific to WSL environments
#
# WARNING: some quoting may not work:
#   ❯ dk-system-bash echo "'yes'" '"no"'
#   'yes' no

#### Preamble (v2025-02-09)

set -euo pipefail
shopt -s failglob
# shellcheck disable=SC2329
function trap_err { echo "$(basename "${BASH_SOURCE[0]}"): ERR signal on line $(caller)" >&2; }
trap trap_err ERR
trap exit INT  # So that ^C will stop the entire script, not just the current subprocess
export PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'

# shellcheck disable=SC2034
SCRIPT_NAME="$(basename "${BASH_SOURCE[0]}")"
script="${BASH_SOURCE[0]}"
while [[ -L "$script" ]]; do
    script="$(readlink "$script")"
done
# shellcheck disable=SC2034
SCRIPT_DIR="$(dirname "$script")"

##############################################################################
#### Config

DK_SYSTEM_SHELL=dk-system-shell

#### Usage

usage() {
    echo "Usage: ${BASH_SOURCE[0]} [<command> [arg…]]"
}

if [[ "${1:-}" == '--help' || "${1:-}" == '-h' ]]; then
    usage
    exit 0
fi

#### Checks

if [[ "${OS_RELEASE:-}" != *WSL* ]]; then
    echo "$SCRIPT_NAME: ERROR: this script is designed for WSL environments only." >&2
    exit 1
fi

#### Main

it=""
cmd="exec \$SHELL --init-file <(echo 'alias docker=/mnt/host/wsl/docker-desktop/cli-tools/usr/bin/docker')"

if [[ $# -eq 0 ]]; then
    it="-it"
else
    # Build the command string for arguments
    args=""
    for arg in "$@"; do
        args="$args $(printf " %q" "$arg")"
    done
    cmd="$cmd -c \"$args\""
fi

exec "$DK_SYSTEM_SHELL" $it /usr/bin/bash -c "$cmd"
